import subprocess
import streamlit as st

# Update this variable to point to your Flux text to image generation Python file location.
# This is used by the Streamlit app to call the Python script that generates images from text prompts.
FLUX_PYTHON_FILE_PATH = "https://github.com/ml-explore/mlx-examples/blob/main/flux/txt2image.py"


def get_user_input() -> None:
    # Add a dropdown widget for Image text prompt generation model user input
    cmd_model_list = "ollama list | awk '{print $1}'"
    ps_model_list = subprocess.Popen(cmd_model_list, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    output_model_list = ps_model_list.communicate()[0]
    model_list = output_model_list.decode("utf-8").strip().split("\n")[1:]
    selected_llm_model = st.selectbox("Select a model to create image text generation prompt:", model_list)

    # Select the FLUX model to generate image with
    flux_model_options = ["schnell", "dev"]
    selected_flux_model = st.selectbox("Select a FLUX model to create the image::", flux_model_options)

    # Select an style for the image
    image_style_options = [
        "anime",
        "graffiti",
        "Papercraft",
        "vector image",
        "pencil sketch",
        "oil painting",
        "pastel colour",
        "water colour",
        "photo realistic",
    ]
    selected_image_style = st.selectbox("Select an art style for the image:", image_style_options)

    # Add a text box for user input
    user_input_raw = st.text_input(label="Enter image description in simple term")
    user_input_text = f"""
    Create a detailed prompt for generating text to image in {selected_image_style} style for: 
    {user_input_raw}
    Keep only the promt and nothing else.
    """
    submit_btn = st.button(label="Generate Image")
    if submit_btn:
        image_generator(user_input_text, selected_llm_model, selected_flux_model, selected_image_style)


def image_generator(user_input: str, llm_model: str, flux_model: str, image_style: str) -> None:
    output_text = f"You have selected: `{llm_model}` LLM model. \n\n You have entered: \n\n{user_input}"
    st.write(output_text)

    with st.spinner("Grnerating more descripting prompt for the image generation..."):
        cmd_generate_prompt = f'ollama run {llm_model} "{user_input}"'
        ps_generate_prompt = subprocess.run([cmd_generate_prompt], shell=True, capture_output=True, encoding="utf-8")
        output_generate_prompt = ps_generate_prompt.stdout.strip()
    st.write(f"The prompt generated by LLM model: \n\n{output_generate_prompt}")
    st.write(f"You have selected : `{flux_model}` FLUX model.")
    st.write(f"You have selected image style as: `{image_style}`")

    # Generate a file name for the image
    output_generate_prompt = output_generate_prompt.replace('"', "'") + "| Keep only the title and nothing else."
    file_name_generation_prompt = (
        f'create a 2 word title separated by underscore for this text - "{output_generate_prompt}"'
    )
    cmd_generate_file_name = f"ollama run {llm_model} {file_name_generation_prompt}"
    ps_generate_file_name = subprocess.run([cmd_generate_file_name], shell=True, capture_output=True, encoding="utf-8")
    output_generate_file_name = ps_generate_file_name.stdout.replace("'", "").replace('"', "").strip()
    st.write(f"The file name generated by LLM model: `{output_generate_file_name}`")

    with st.spinner("Creating Your image..."):
        # Generate the image
        subprocess.run(
            [
                "python",
                f"{FLUX_PYTHON_FILE_PATH}",
                "--model",
                f"{flux_model}",
                "--n-images",
                "1",
                "--image-size",
                "768x1024",
                "--output",
                f"{output_generate_file_name}.png",
                f"{output_generate_prompt}",
            ]
        )

    # Add an image as part of the output
    image = open(f"{output_generate_file_name}.png", "rb").read()
    st.image(image, caption="Generated Image")


if __name__ == "__main__":
    st.title("Streamlit App for generating images using FLUX")
    get_user_input()
